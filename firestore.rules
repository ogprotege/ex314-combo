rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Users collection - users can read their own document
    match /users/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow write: if false; // Only admin SDK should write user documents
    }

    // Conversation logs - admin only
    match /conversation_logs/{document=**} {
      allow read: if isAdmin();
      allow write: if false; // Only server-side should write
    }

    // Message logs - admin only
    match /message_logs/{document=**} {
      allow read: if isAdmin();
      allow write: if false; // Only server-side should write
    }

    // Chats collection - users can access their own chats
    match /chats/{chatId} {
      allow read, write: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
    }

    // Saints collection - public read
    match /saints/{saint} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Prayers collection - public read
    match /prayers/{prayer} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Analytics collections - admin only
    match /analytics/{document=**} {
      allow read: if isAdmin();
      allow write: if false; // Only server-side should write
    }

    // Contact messages - authenticated users can create
    match /contacts/{message} {
      allow create: if isAuthenticated();
      allow read: if isAdmin() || 
        (isAuthenticated() && resource.data.userId == request.auth.uid);
      allow update, delete: if false;
    }

    // Demo mode collections (when auth is skipped)
    match /demo/{document=**} {
      allow read, write: if true;
    }

    // Temporary allow rule for development
    // TODO: Remove this before production
    match /{document=**} {
      allow read, write: if request.time < timestamp.date(2025, 1, 31);
    }
  }
}